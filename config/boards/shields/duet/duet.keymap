/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define QWERTY 0
#define EU 1
#define NAV 2
#define NUM 3
#define SYM 4
#define FUNC 5
#define SYS 6

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27  // left-hand keys
#define KEYS_R 5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33  // right-hand keys
#define THUMBS 34 35 36 37 38 39

&lt {
    tapping-term-ms = <150>;
};

&mt {
    tapping-term-ms = <150>;
};

&encoder {
    status = "okay";
};

/ {
    behaviors {
        hsl: homerow_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <140>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <30>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hsr: homerow_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <140>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <30>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hcl: homerow_ctrl_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <30>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        hcr: homerow_ctrl_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <30>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
        hml: homerow_mods_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <50>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        hmr: homerow_mods_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <50>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };

    macros {
        m_arrow: m_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_caps_word {
            timeout-ms = <50>;
            key-positions = <14 17>;
            bindings = <&caps_word>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                           &kp Q        &kp W        &kp E         &kp R         &kp T            &kp Y      &kp U         &kp I         &kp O        &kp P
                &kp EQUAL  &hml LGUI A  &hml LALT S  &hcl LCTRL D  &hsl LSHFT F  &kp G            &kp H      &hsr RSHFT J  &hcr RCTRL K  &hmr LALT L  &hmr RGUI SEMI  &kp SQT
                &kp MINUS  &kp Z        &kp X        &kp C         &kp V         &kp B            &kp N      &kp M         &kp COMMA     &kp DOT      &kp SLASH       &kp GRAVE
                                                 &lt FUNC ESC  &lt NUM TAB  &lt SYM SPACE      &lt FUNC ENTER  &lt NAV BSPC  &lt EU DEL
                &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none                                                                        &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        eu_layer {
            bindings = <
                          &trans       &trans      &kp RA(E)    &kp R        &trans            &trans       &kp RA(U)    &trans      &kp RA(O)    &trans 
                &trans    &kp RA(A)    &kp RA(S)   &trans       &kp LSHFT    &trans            &trans       &kp RSHFT    &m_arrow    &kp RA(L)    &trans       &trans
                &trans    &kp RA(Z)    &kp RA(X)   &kp RA(C)    &trans       &trans            &kp RA(N)    &trans       &trans      &trans       &trans       &trans
                                                        &trans     &trans     &trans        &trans      &trans     &trans
                &trans  &trans  &trans  &trans  &trans                                                                               &trans
            >;
        };

        nav_layer {
            bindings = <
                          &none       &none        &none        &none        &none            &none         &none        &kp PG_DN    &kp PG_UP    &none
                &none     &kp LGUI    &kp LALT     &kp LCTRL    &kp LSHFT    &none            &kp LA(UP)    &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &kp PAUSE_BREAK
                &none     &none       &none        &none        &none        &none            &kp LA(DOWN)  &kp HOME     &kp END      &kp INS      &kp K_APP    &none
                                                        &trans     &trans     &trans        &trans      &trans     &trans
                &trans  &trans  &trans  &trans  &trans                                                                                &trans
            >;
        };

        num_layer {
            bindings = <
                            &kp ENTER  &kp N7      &kp N8      &kp N9      &kp LBKT           &none        &none        &none        &none        &none
                &kp LCTRL   &kp N0     &kp N4      &kp N5      &kp N6      &kp RBKT           &none        &kp RSHFT    &kp RCTRL    &kp LALT     &kp RGUI     &none
                &kp LSHFT   &kp BSPC   &kp N1      &kp N2      &kp N3      &kp BSLH           &none        &none        &none        &none        &none        &none
                                                         &trans     &trans     &trans       &trans      &trans     &trans
                &trans  &trans  &trans  &trans  &trans                                                                               &trans
            >;
        };

        sym_layer {
            bindings = <
                            &kp ENTER  &kp AMPS    &kp STAR    &kp LPAR    &kp LBRC           &none        &none        &none        &none        &none
                &kp LCTRL   &kp RPAR   &kp DLLR    &kp PRCNT   &kp CARET   &kp RBRC           &none        &kp RSHFT    &kp RCTRL    &kp LALT     &kp RGUI    &none
                &kp LSHFT   &kp BSPC   &kp EXCL    &kp AT      &kp HASH    &kp PIPE           &none        &none        &none        &none        &none       &none
                                                         &trans     &trans     &trans       &trans      &trans     &trans
                &trans  &trans  &trans  &trans  &trans                                                                                &trans
            >;
        };

        func_layer {
            bindings = <
                           &none       &kp F7      &kp F8      &kp F9      &kp F11             &none        &none        &none        &none        &none
                &kp LCTRL  &kp F10     &kp F4      &kp F5      &kp F6      &kp F12             &none        &kp RSHFT    &kp RCTRL    &kp LALT     &kp RGUI    &none
                &kp LSHFT  &none       &kp F1      &kp F2      &kp F3      &kp CAPS            &none        &none        &none        &none        &none       &none
                                                    &trans     &kp C_NEXT     &kp C_PP       &trans      &trans     &mo SYS
                &trans  &trans  &trans  &trans  &trans                                                                                &trans
            >;
        };

        sys_layer {
            bindings = <
                          &none     &none     &none     &none     &none           &bt BT_SEL 0       &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
                &none     &none     &none     &none     &none     &none           &ext_power EP_ON   &out OUT_BLE  &none         &none         &none           &bt BT_CLR
                &none     &none     &none     &none     &none     &none           &ext_power EP_OFF  &out OUT_USB  &none         &none         &none           &none
                                                &none     &none     &none       &trans      &bootloader     &trans
                &none  &none  &none  &none  &none                                                                                              &none
            >;
        };

    };
};